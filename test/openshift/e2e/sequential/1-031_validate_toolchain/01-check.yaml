apiVersion: kuttl.dev/v1beta1
kind: TestStep
commands:
- script: |
    set -e
    set -o pipefail

    # These variables need to be maintained according to the component matrix: https://spaces.redhat.com/display/GITOPS/GitOps+Component+Matrix
    expected_kustomizeVersion='kustomize/v4.5.7'
    expected_helmVersion='v3.10.0'
    expected_argocdVersion='v2.6.1'
    expected_dexVersion='v2.35.1'
    expected_redisVersion='6'

    gitops_server_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-server | \
      head -1
    )
    dex_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-dex-server | \
      head -1
    )
    redis_pod=$(oc get -n openshift-gitops pods \
      -o custom-columns=NAME:.metadata.name --no-headers | \
      grep openshift-gitops-redis | \
      head -1
    )
    route=$(oc get route -n openshift-gitops \
      -o custom-columns=NAME:.spec.host --no-headers | \
      grep openshift-gitops-server | \
      head -1
    )

    kustomizeVersion=$(oc -n openshift-gitops exec $gitops_server_pod \
      -- kustomize version | \
      awk -F':' '{ print $2 }' | \
      awk '{ print $1 }'
    )
    helmVersion=$(oc -n openshift-gitops exec $gitops_server_pod \
      -- helm version | \
      sed -e 's/version.BuildInfo//' -e 's/\"//g' | \
      awk -F':' '{ print $2 }' | \
      awk -F',' '{ print $1 }'
    )
    argocdVersion=$(oc -n openshift-gitops exec $gitops_server_pod -- \
      argocd version --short --server $route --insecure | \
      grep 'argocd-server' | \
      sed -e 's/\+unknown//' | \
      awk -F' ' '{ print $2 }'
    )
    dexVersion=$(oc -n openshift-gitops exec $dex_pod -- dex version 2>&1 | \
      grep '^Dex Version' | \
      awk -F': ' '{ print $2 }'
    )

    redisVersion=$(oc -n openshift-gitops exec $redis_pod -- \
      redis-server -v | awk -F '=' '{ print $2 }' | cut -d'.' -f 1
    )

    if test "${kustomizeVersion}" != "${expected_kustomizeVersion}"; then
      echo "Kustomize version mismatch. Should be ${expected_kustomizeVersion}, is ${kustomizeVersion}"
      exit 1
    fi

    # Commenting the below tests. Refer https://issues.redhat.com/browse/GITOPS-2641 

    # if test "${helmVersion}" != "${expected_helmVersion}"; then
    #   echo "Helm version mismatch. Should be ${expected_helmVersion}, is ${helmVersion}"
    #   exit 1
    # fi
    # if test "${argocdVersion}" != "${expected_argocdVersion}"; then
    #   echo "ArgoCD version mismatch. Should be ${expected_argocdVersion}, is ${argocdVersion}"
    #   exit 1
    # fi
    # if test "${dexVersion}" != "${expected_dexVersion}"; then
    #   echo "Dex version mismatch. Should be ${expected_dexVersion}, is ${dexVersion}"
    #   exit 1
    # fi
    
    if test "${redisVersion}" != "${expected_redisVersion}"; then
      echo "Redis version mismatch. Should be ${expected_redisVersion}, is ${redisVersion}"
      exit 1
    fi
